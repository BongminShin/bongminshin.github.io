{"version":3,"sources":["store/dataTypes.js","store/initialData.js","store/stateActions.js","store/modelActionCreators.js","store/modelActionTypes.js","store/index.js","store/modelReducer.js","store/stateReducer.js","Selector.js","SupplierEditor.js","SupplierTableRow.js","SupplierTable.js","store/EditorConnector.js","store/TableConnector.js","SupplierDisplay.js","ProductTableRow.js","ProductTable.js","ProductEditor.js","ProductDisplay.js","App.js","serviceWorker.js","index.js"],"names":["PRODUCTS","initialData","modelData","id","name","category","price","city","products","stateData","editing","selectedId","selectedType","startEditingProduct","product","type","dataTypes","payload","startEditingSupplier","supplier","endEditing","console","log","idCounter","saveProduct","createSaveEvent","saveSupplier","dataType","deleteProduct","deleteSupplier","createStore","combineReducers","storeData","action","concat","map","p","filter","Selector","props","setSelection","ev","persist","setState","selection","target","state","React","Children","toArray","children","className","this","c","onClick","Component","SupplierEditor","handleChange","formData","value","split","handleClick","saveCallback","val","Number","disabled","onChange","cancelCallback","SupplierTableRow","s","join","editCallback","deleteCallback","SupplierTable","suppliers","key","EditorConnector","presentationComponent","connect","find","dispatch","data","TableConnector","mapDispatchToProps","ConnectedEditor","ConnectedTable","createSupplier","SupplierDisplay","selected","item","connectFunction","ProductTableRow","toFixed","ProductTable","colSpan","ProductEditor","createProduct","ProductDisplay","App","store","dataStore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44af7b09.chunk.js","sourcesContent":["export const PRODUCTS = \"products\";\r\nexport const SUPPLIERS = \"suppliers\";","import { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\r\n\r\nexport const initialData = {\r\n    modelData:{\r\n        [PRODUCTS]:[\r\n            { id: 1, name: \"Trail Shoes\", category: \"Running\", price: 100 },\r\n            { id: 2, name: \"Thermal Hat\", category: \"Running\", price: 12 },\r\n            { id: 3, name: \"Heated Gloves\", category: \"Running\", price: 82.50 }\r\n        ],\r\n        [SUPPLIERS]:[\r\n            { id: 1, name: \"Zoom Shoes\", city: \"London\", products:[1] },\r\n            { id: 2, name: \"Cosy Gear\", city: \"New York\", products:[2, 3] }\r\n        ]        \r\n    },\r\n    stateData: {\r\n        editing: false,\r\n        selectedId: -1,\r\n        selectedType:PRODUCTS\r\n    }\r\n}","import { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\r\n\r\nexport const STATE_START_EDITING = \"state_start_editing\";\r\nexport const STATE_END_EDITING = \"state_end_editing\";\r\nexport const STATE_START_CREATING = \"state_start_creating\";\r\n\r\nexport const startEditingProduct = (product) => ({\r\n    type:STATE_START_EDITING,\r\n    dataTypes: PRODUCTS,\r\n    payload: product\r\n});\r\n\r\nexport const startEditingSupplier = (supplier) => ({\r\n    type:STATE_START_EDITING,\r\n    dataTypes: SUPPLIERS,\r\n    payload: supplier\r\n});\r\n\r\nexport const endEditing = () => {\r\n    console.log(\"endProduct\")\r\n    return { type:STATE_END_EDITING }\r\n};\r\n\r\nexport const startCreatingProduct = () => ({\r\n    type:STATE_START_CREATING,\r\n    dataTypes: PRODUCTS\r\n})\r\n\r\nexport const startCreatingSupplier = () => {\r\n    console.log(\"come\");\r\n    return {\r\n        type:STATE_START_CREATING,\r\n        dataTypes: SUPPLIERS\r\n    }\r\n}","import { PRODUCTS, SUPPLIERS } from './dataTypes';\r\nimport { STORE, UPDATE, DELETE } from './modelActionTypes';\r\n\r\nlet idCounter = 100;\r\n\r\nexport const saveProduct = (product) => {\r\n    console.log(\"saveProduct\")\r\n    return createSaveEvent(PRODUCTS, product);\r\n}\r\n\r\nexport const saveSupplier = (supplier) => {\r\n    return createSaveEvent(SUPPLIERS, supplier);\r\n}\r\n\r\nconst createSaveEvent = (dataType, payload) => {\r\n    if(!payload.id){\r\n        return {\r\n            type: STORE,\r\n            dataType: dataType,\r\n            payload: { ...payload, id: idCounter++ }\r\n        }\r\n    } else {\r\n        return {\r\n            type: UPDATE,\r\n            dataType: dataType,\r\n            payload: payload\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (product) => {\r\n   return {\r\n       type: DELETE,\r\n       dataType:PRODUCTS,\r\n       payload:product.id\r\n   } \r\n}\r\n\r\nexport const deleteSupplier = (supplier) => {\r\n    return {\r\n        type:DELETE,\r\n        dataType:SUPPLIERS,\r\n        payload: supplier.id\r\n    }\r\n}","export const STORE = \"STORE\"; //add objects to the data store\r\nexport const UPDATE = \"UPDATE\"; // modify existing objects\r\nexport const DELETE = \"DELETE\"; // remove objects","import { createStore, combineReducers } from \"redux\";\r\nimport modelReducer from \"./modelReducer\";\r\nimport stateReducer from \"./stateReducer\";\r\n\r\nexport default createStore(combineReducers(\r\n    { \r\n        modelData: modelReducer,\r\n        stateData: stateReducer\r\n    }\r\n));\r\n\r\nexport { saveProduct, saveSupplier, deleteProduct, deleteSupplier } from \"./modelActionCreators\";","import {STORE, UPDATE, DELETE } from \"./modelActionTypes\";\r\nimport { initialData } from \"./initialData\";\r\n\r\nexport default function(storeData, action){\r\n    switch(action.type){\r\n        case STORE:\r\n            return {\r\n                ...storeData,\r\n                [action.dataType]: storeData[action.dataType].concat([action.payload])\r\n            }\r\n        case UPDATE:\r\n            return {\r\n                ...storeData,\r\n                [action.dataType]: storeData[action.dataType].map( p => p.id === action.payload.id ? action.payload : p)\r\n            }\r\n        case DELETE:\r\n            return {\r\n                ...storeData,\r\n                [action.dataType]: storeData[action.dataType].filter( p => p.id !== action.payload)\r\n            }\r\n        default:\r\n            return storeData || initialData.modelData;\r\n    }\r\n}","import { STATE_START_EDITING, STATE_END_EDITING, STATE_START_CREATING} from \"./stateActions\"\r\nimport { initialData } from \"./initialData\";\r\n\r\nexport default function(storeData, action){\r\n    console.log(action.type);\r\n    switch(action.type){\r\n        case STATE_START_EDITING:\r\n        case STATE_START_CREATING:\r\n            return {\r\n                ...storeData,\r\n                editing:true,\r\n                selectedId: action.type === STATE_START_EDITING ? action.payload.id : -1,\r\n                selectedType: action.dataType\r\n            }\r\n        case STATE_END_EDITING:\r\n            return {\r\n                ...storeData,\r\n                editing:false\r\n            }\r\n        default:\r\n            return storeData || initialData.stateData;\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nclass Selector extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            selection: React.Children.toArray(props.children)[0].props.name\r\n        }\r\n    }\r\n\r\n    setSelection = (ev) =>{\r\n        ev.persist();\r\n        this.setState({ selection: ev.target.name});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        {console.log(React.Children)}\r\n                        {console.log(React.Children.map(this.props.children, c=> c.props.name))}\r\n                        { React.Children.map(this.props.children, c=>\r\n                            <button name={ c.props.name }\r\n                            onClick={ this.setSelection }\r\n                            className={ `btn btn-block m-2 ${this.state.selection === c.props.name ? \"btn-primary active\" : \"btn-secondary\"}` }>\r\n                                {c.props.name}\r\n                            </button>    \r\n                        )}\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {console.log(React.Children.toArray(this.props.children).filter(c => c.props.name === this.state.selection))}\r\n                        {\r\n                            React.Children.toArray(this.props.children).filter(c => c.props.name === this.state.selection)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Selector;","import React, { Component } from 'react';\r\n\r\nclass SupplierEditor extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            formData:{\r\n                id: props.supplier.id || \"\",\r\n                name: props.supplier.name || \"\",\r\n                city: props.supplier.city || \"\",\r\n                products: props.supplier.products || [],\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        ev.persist();\r\n        this.setState(state =>\r\n            state.formData[ev.target.name] = ev.target.name === \"products\" ? ev.target.value.split(\",\") : ev.target.value);\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.saveCallback({ \r\n            ...this.state.formData, \r\n            products: this.state.formData.products.map(val => Number(val))\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"m-2\">\r\n                <div className=\"form-group\">\r\n                    <label>ID</label>\r\n                    <input className=\"form-control\" name=\"id\" disabled value={ this.state.formData.id } onChange={ this.handleChange }/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input className=\"form-control\" name=\"id\" disabled value={ this.state.formData.name } onChange={ this.handleChange }/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>City</label>\r\n                    <input className=\"form-control\" name=\"id\" disabled value={ this.state.formData.city } onChange={ this.handleChange }/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Products</label>\r\n                    <input className=\"form-control\" name=\"id\" disabled value={ this.state.formData.products } onChange={ this.handleChange }/>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-primary m-1\" onClick={ this.handleClick }>Save</button>\r\n                    <button className=\"btn btn-secondary m-1\" onClick={ this.props.cancelCallback }>Cancel</button>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SupplierEditor;","import React, { Component } from 'react';\r\n\r\nclass SupplierTableRow extends Component {\r\n    render() {\r\n        let s = this.props.supplier;\r\n        return (\r\n            <tr>\r\n                <td>{ s.id }</td>\r\n                <td>{ s.name }</td>\r\n                <td>{ s.city }</td>\r\n                <td>{ s.products.join(\", \") }</td>\r\n                <td>\r\n                    <button className=\"btn btn-sm btn-warning m-1\" onClick={ () => this.props.editCallback(s) }>Edit</button>\r\n                    <button className=\"btn btn-sm btn-danger m-1\" onClick={ () => this.props.deleteCallback(s) }>Delete</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SupplierTableRow;","import React, { Component } from 'react';\r\nimport SupplierTableRow from './SupplierTableRow';\r\n\r\nclass SupplierTable extends Component {\r\n    render() {\r\n        return (\r\n            <table className=\"table table-sm table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>City</th>\r\n                        <th>Products</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.props.suppliers.map(s=>\r\n                            <SupplierTableRow supplier={s}\r\n                                              key={s.id}\r\n                                              editCallback={this.props.editCallback}\r\n                                              deleteCallback={this.props.deleteCallback}/>\r\n                                            )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SupplierTable;","import { connect } from \"react-redux\";\r\nimport { endEditing } from \"./stateActions\";\r\nimport { saveProduct, saveSupplier } from \"./modelActionCreators\";\r\nimport { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\r\n\r\nexport const EditorConnector = ( dataType, presentationComponent ) => {\r\n    const mapStateToProps = (storeData) => ({\r\n        editing: storeData.stateData.editing && storeData.stateData.selectedType === dataType,\r\n        product: (storeData.modelData[PRODUCTS].find(p => p.id === storeData.stateData.selectedId)) || {},\r\n        supplier: (storeData.modelData[SUPPLIERS].find(s => s.id === storeData.stateData.selectedId)) || {}\r\n    });\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        cancelCallback: () => dispatch(endEditing()),\r\n        saveCallback: (data) => { dispatch((dataType === PRODUCTS ? saveProduct : saveSupplier)(data)); dispatch(endEditing())}\r\n    });\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(presentationComponent);\r\n}","import { connect } from \"react-redux\";\r\nimport {startEditingProduct, startEditingSupplier} from \"./stateActions\";\r\nimport {deleteProduct, deleteSupplier} from \"./modelActionCreators\";\r\nimport {PRODUCTS, SUPPLIERS} from \"./dataTypes\";\r\n\r\nexport const TableConnector = ( dataType, presentationComponent) => {\r\n    const mapStateToProps = (storeData) => ({\r\n        products: storeData.modelData[PRODUCTS],\r\n        suppliers: storeData.modelData[SUPPLIERS]\r\n    })\r\n\r\n    const mapDispatchToProps = {\r\n        editCallback: dataType === PRODUCTS ? startEditingProduct : startEditingSupplier,\r\n        deleteCallback: dataType === PRODUCTS ? deleteProduct : deleteSupplier\r\n    }\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(presentationComponent);\r\n}","import React, { Component } from 'react';\r\nimport SupplierEditor from './SupplierEditor';\r\nimport SupplierTable from './SupplierTable';\r\nimport { connect } from \"react-redux\";\r\n// import { saveSupplier, deleteSupplier } from \"./store\";\r\nimport {EditorConnector} from \"./store/EditorConnector\";\r\nimport {SUPPLIERS} from \"./store/dataTypes\";\r\nimport {TableConnector} from \"./store/TableConnector\";\r\nimport {startCreatingSupplier} from \"./store/stateActions\";\r\n\r\n\r\nconst ConnectedEditor = EditorConnector(SUPPLIERS, SupplierEditor);\r\nconst ConnectedTable = TableConnector(SUPPLIERS, SupplierTable);\r\n\r\nconst mapStateToProps = (storeData) => {\r\n    return {\r\n        editing: storeData.stateData.editing,\r\n        selected: storeData.modelData.suppliers.find(item => item.id === storeData.stateData.selectedId) || {}\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createSupplier: startCreatingSupplier\r\n}\r\n\r\nconst connectFunction = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport const SupplierDisplay = connectFunction(class extends Component {\r\n    \r\n    render() {\r\n        console.log(\"display\");\r\n        if(this.props.editing){\r\n            return (\r\n                <ConnectedEditor key= { this.props.selected.id || -1 }/>\r\n\r\n            );\r\n        }else{\r\n            return (\r\n                <div className=\"m-2\">\r\n                    <ConnectedTable />\r\n                    <div className=\"text-center\">\r\n                        <button className=\"btn btn-primary m-1\" onClick={ this.props.createSupplier }>Create Supplier</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n})\r\n","import React, { Component } from 'react';\r\n\r\nexport class ProductTableRow extends Component {\r\n    render() {\r\n        let p = this.props.product;\r\n        return (\r\n            <tr>\r\n               <td>{ p.id }</td>\r\n               <td>{ p.name }</td>\r\n               <td>{ p.category }</td>\r\n               <td className=\"text-right\">${ Number(p.price).toFixed(2) }</td>\r\n               <td>\r\n                   <button className=\"btn btn-sm btn-warning m-1\" onClick={()=> this.props.editCallback(p)}>Edit</button>\r\n                   <button className=\"btn btn-sm btn-danger m-1\" onClick={()=>this.props.deleteCallback(p)}>Delete</button>\r\n                </td> \r\n            </tr>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ProductTableRow } from \"./ProductTableRow\";\r\n\r\nexport class ProductTable extends Component {\r\n    render(){\r\n        return <table className=\"table table-sm table-striped table-bordered\">\r\n            <thead>\r\n                <tr>\r\n                    <th colSpan=\"5\" className=\"bg-primary text-white text center h4 p-2\">\r\n                        Products\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Category</th>\r\n                    <th className=\"text-right\">Price</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    this.props.products.map(p => \r\n                        <ProductTableRow product={p}\r\n                                         key={p.id}\r\n                                         editCallback={ this.props.editCallback }\r\n                                         deleteCallback={ this.props.deleteCallback }/>)\r\n                }\r\n            </tbody>\r\n        </table>\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport class ProductEditor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            formData:{\r\n                id: props.product.id || \"\",\r\n                name: props.product.name || \"\",\r\n                category: props.product.category || \"\",\r\n                price: props.product.price || \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        ev.persist();\r\n        this.setState(state => state.formData[ev.target.name] = ev.target.value);\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.saveCallback(this.state.formData);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"m-2\">\r\n                    <div className=\"form-group\">\r\n                        <label>ID</label>\r\n                        <input className=\"form-control\" name=\"id\" disabled value={ this.state.formData.id } onChange={ this.handleChange }/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input className=\"form-control\" name=\"name\" value={ this.state.formData.name } onChange={ this.handleChange }/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Category</label>\r\n                        <input className=\"form-control\" name=\"category\" value= { this.state.formData.category } onChange={ this.handleChange }/>\r\n                    </div>\r\n                    <div className=\"form=group\">\r\n                        <label>Price</label>\r\n                        <input className=\"form-control\" name=\"price\" value={ this.state.formData.price } onChange={ this.handleChange }/>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <button className=\"btn btn-primary m-1\" onClick={ this.handleClick }>\r\n                            Save\r\n                        </button>\r\n                        <button className=\"btn btn-secondary\" onClick={ this.props.cancelCallback }>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n               </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { ProductTable } from './ProductTable';\r\nimport { ProductEditor } from './ProductEditor';\r\nimport { connect } from \"react-redux\";\r\n// import { saveProduct, deleteProduct } from \"./store\"\r\nimport { EditorConnector } from \"./store/EditorConnector\";\r\nimport { PRODUCTS } from \"./store/dataTypes\";\r\nimport { TableConnector } from \"./store/TableConnector\";\r\nimport { startCreatingProduct } from \"./store/stateActions\";\r\n\r\nconst ConnectedEditor = EditorConnector(PRODUCTS, ProductEditor);\r\nconst ConnectedTable = TableConnector(PRODUCTS, ProductTable);\r\n\r\nconst mapStateToProps = (storeData) => ({ //bring data\r\n        editing: storeData.stateData.editing,\r\n        products:storeData.modelData.products.find(item => item.id === storeData.stateData.selectedId) || {}\r\n})\r\n\r\n\r\nconst mapDispatchToProps = { //bring function\r\n    createProduct: startCreatingProduct,\r\n}\r\n\r\n\r\nconst connectFunction = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport const ProductDisplay = connectFunction(class extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         showEditor: false,\r\n    //         selectedProduct: null\r\n    //     }\r\n    // }\r\n\r\n    // startEditing = (product) => {\r\n    //     this.setState({ showEditor: true, selectedProduct: product });\r\n    // }\r\n\r\n    // createProduct = () => {\r\n    //     this.setState({ showEditor:true, selectedProduct:{} });\r\n    // }\r\n\r\n    // cancelEditing = () => {\r\n    //     this.setState({ showEditor: false, selectedProduct:null });\r\n    // }\r\n\r\n    // saveProduct = (product) => {\r\n    //     this.props.saveCallback(product);\r\n    //     this.setState({ showEditor: false, selectedProduct:null });\r\n    // }\r\n\r\n    render() {\r\n        if(this.props.editing){\r\n            return <ConnectedEditor key={ this.props.selectedId || -1 } />\r\n            // return <ProductEditor\r\n            //         key={ this.state.selectedProduct.id || -1 }\r\n            //         product={ this.state.selectedProduct }\r\n            //         saveCallback={ this.saveProduct }\r\n            //         cancelCallback={ this.cancelEditing }/>\r\n        } else {\r\n            return <div className=\"m-2\">\r\n                        <ConnectedTable />\r\n                        {/* <ProductTable products={ this.props.products }\r\n                                    editCallback={ this.startEditing }\r\n                                    deleteCallback={ this.props.deleteCallback }/> */}\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-primary m-1\" onClick={ this.props.createProduct }>\r\n                                Create Product\r\n                            </button>\r\n                        </div>\r\n                   </div>\r\n        }\r\n    }\r\n})","import React from 'react';\nimport './App.css';\n// import ProductsAndSuppliers from './ProductsAndSuppliers';\nimport { Provider } from \"react-redux\";\nimport dataStore from \"./store\";\nimport Selector from \"./Selector\";\nimport { SupplierDisplay } from './SupplierDisplay';\nimport { ProductDisplay } from './ProductDisplay';\n\nfunction App() {\n  return (\n    <Provider store={ dataStore }>\n      {/* <ProductsAndSuppliers/> */}\n      <Selector>\n        <ProductDisplay name=\"Products\"/>\n        <SupplierDisplay name=\"Suppliers\"/>\n      </Selector>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}